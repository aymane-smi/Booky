name: Application Testing

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.*'
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.17.x, 1.18.x, 1.19.x ]
    runs-on: ubuntu-latest
    services:
      book_db:
        image: postgres
        container_name: book_db
        env:
          POSTGRES_USER: aymane
          POSTGRES_DB: book_go
          POSTGRES_PASSWORD: aymane@123
        ports:
          - 5432:5432
        # Health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Lint with golangci-lint
        uses: golangci/golangci-lint-action@v2
      # - name: Run postgres container
      #   run : | 
      #           docker build -t book_db .
      #           docker run -d --network host --name book_db -p 5432:5432 book_db
      #           docker ps
      - name: Wait for PostgreSQL to Be Ready
        run: |
          max_retries=10
          retries=0
          until docker exec book_db psql -h localhost -U postgres -d book_go -c '\q'; do
            retries=$((retries+1))
            docker ps
            if [ $retries -ge $max_retries ]; then
              echo "PostgreSQL not ready after $max_retries retries"
              exit 1
            fi
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
      - name: Migarte table defintion
        run : sudo docker exec -i book_db psql -h localhost -U aymane book_go -a -f book_go.sql
      - name: Install Dependency
        run : go mod download
      # - name: Run Go Test for controllers
      #   run : go run main.go &
      #        go test ./controllers
      - name: Run Go Test with excluding controllers package
        run : |
                go test $(go list ./... | grep -v /controllers)